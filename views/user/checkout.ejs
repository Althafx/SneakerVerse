<%- include('../partials/user/header') %>

<style>
    body {
        background: #353535;
        color: #ffffff;
    }
    
    /* Breadcrumb Styles */
    .custom-breadcrumb {
        background-color: #2d2d2d;
        padding: 0.75rem 1rem;
        border-radius: 12px;
        margin-bottom: 1rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .custom-breadcrumb .breadcrumb {
        margin-bottom: 0;
        background: transparent;
    }
    
    .custom-breadcrumb .breadcrumb-item a {
        color: #4CAF50;
        text-decoration: none;
        transition: color 0.3s ease;
    }
    
    .custom-breadcrumb .breadcrumb-item a:hover {
        color: #45a049;
    }
    
    .custom-breadcrumb .breadcrumb-item.active {
        color: #ffffff;
    }
    
    .custom-breadcrumb .breadcrumb-item + .breadcrumb-item::before {
        content: "›";
        color: #666666;
    }

    /* Card Styles */
    .card {
        background: #2d2d2d;
        border: none;
        border-radius: 12px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        margin-bottom: 1.5rem;
    }

    .card-header {
        background: linear-gradient(145deg, #2d2d2d, #1a1a1a);
        border-bottom: 1px solid #333333;
        padding: 1rem 1.5rem;
        border-radius: 12px 12px 0 0;
    }

    .card-body {
        padding: 1.5rem;
    }

    /* Address Card Styles */
    .address-card {
        background: #333333;
        border: 1px solid #444444 !important;
        border-radius: 10px;
        transition: all 0.3s ease;
    }

    .address-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    /* Form Styles */
    .form-check-input {
        background-color: #333333;
        border-color: #4CAF50;
    }

    .form-check-input:checked {
        background-color: #4CAF50;
        border-color: #4CAF50;
    }

    .form-check-label {
        color: #ffffff;
    }

    /* Button Styles */
    .btn {
        padding: 0.6rem 1.5rem;
        border-radius: 10px;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: linear-gradient(90deg, #4CAF50, #45a049);
        border: none;
    }

    .btn-primary:hover {
        background: linear-gradient(90deg, #45a049, #4CAF50);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3);
    }

    .btn-outline-primary {
        border: 2px solid #4CAF50;
        color: #4CAF50;
    }

    .btn-outline-primary:hover {
        background: #4CAF50;
        border-color: #4CAF50;
        transform: translateY(-2px);
    }

    /* Order Summary Styles */
    .order-summary-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.5rem;
        padding: 0.5rem 0;
        border-bottom: 1px solid #333333;
    }

    .order-total {
        font-size: 1.2rem;
        font-weight: bold;
        color: #4CAF50;
    }

    /* Wallet Balance Badge */
    .wallet-balance {
        display: inline-block;
        background: #333333;
        padding: 0.3rem 0.8rem;
        border-radius: 20px;
        margin-left: 0.5rem;
        font-size: 0.9rem;
        color: #4CAF50;
    }

    .wallet-insufficient {
        color: #f44336;
    }

    /* Alert Styles */
    .alert {
        border-radius: 10px;
        border: none;
    }

    .alert-danger {
        background: #f443361a;
        color: #f44336;
    }

    .alert-success {
        background: #4caf501a;
        color: #4CAF50;
    }

    span,h4{
        color: #ffffff;
    }
</style>

<div class="container mt-5 mb-5">
    <!-- Breadcrumb -->
    <div class="custom-breadcrumb mb-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/home">Home</a></li>
                <li class="breadcrumb-item"><a href="/cart">Cart</a></li>
                <li class="breadcrumb-item active" aria-current="page">Checkout</li>
            </ol>
        </nav>
    </div>

    <% if (error_msg && error_msg.length > 0) { %>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <%= error_msg %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    <% } %>

    <% if (success_msg && success_msg.length > 0) { %>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <%= success_msg %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    <% } %>

    <% if (!addresses || !Array.isArray(addresses) || addresses.length === 0) { %>
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body text-center">
                        <h3>Add Delivery Address</h3>
                        <p class="mb-4">Please add a delivery address to continue with checkout.</p>
                        <button class="btn btn-primary add-address-btn" data-bs-toggle="modal" data-bs-target="#addAddressModal">Add New Address</button>
                    </div>
                </div>
            </div>
        </div>
    <% } else { %>
        <div class="row">
            <!-- Left Column - Address Selection -->
            <div class="col-md-8">
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">Select Delivery Address</h4>
                        <button class="btn btn-outline-primary btn-sm add-address-btn" data-bs-toggle="modal" data-bs-target="#addAddressModal">Add New Address</button>
                    </div>
                    <div class="card-body">
                        <% addresses.forEach((address, index) => { %>
                            <div class="address-card mb-3 p-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="selectedAddress" 
                                           id="address<%= index %>" value="<%= address._id %>" 
                                           <%= index === 0 ? 'checked' : '' %>>
                                    <label class="form-check-label" for="address<%= index %>">
                                        <strong><%= address.name %></strong><br>
                                        <%= address.landMark %><br>
                                        <%= address.city %>, <%= address.state %> <%= address.pincode %><br>
                                        Phone: <%= address.phone %><br>
                                        Alt Phone: <%= address.altPhone %><br>
                                        Type: <%= address.addressType %>
                                    </label>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>

                <!-- Payment Method Selection -->
                <div class="card">
                    <div class="card-header">
                        <h4 class="mb-0">Payment Method</h4>
                    </div>
                    <div class="card-body">
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="cod" checked>
                            <label class="form-check-label" for="cod">
                                Cash on Delivery
                            </label>
                        </div>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="wallet" value="wallet">
                            <label class="form-check-label" for="wallet">
                                Wallet
                                <span class="wallet-balance <%= subtotal > (wallet?.balance || 0) ? 'wallet-insufficient' : '' %>">
                                    Balance: ₹<%= (wallet?.balance || 0).toFixed(2) %>
                                </span>
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="online" value="online">
                            <label class="form-check-label" for="online">
                                Razorpay
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column - Order Summary -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h4 class="mb-0">Order Summary</h4>
                    </div>
                    <div class="card-body">
                        <div class="order-summary-item">
                            <span>Subtotal</span>
                            <span>₹<%= subtotal.toFixed(2) %></span>
                        </div>
                        <div class="order-summary-item">
                            <span>Shipping</span>
                            <span>Free</span>
                        </div>
                        <div class="order-summary-item">
                            <span>Tax</span>
                            <span>₹0.00</span>
                        </div>
                        <div class="order-summary-item order-total">
                            <span>Total</span>
                            <span>₹<%= subtotal.toFixed(2) %></span>
                        </div>
                        <button onclick="handleOrder()" class="btn btn-primary w-100 mt-3">
                            Place Order
                        </button>
                    </div>
                </div>
            </div>
        </div>
    <% } %>
</div>

<!-- Add Address Modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-dark text-white">
            <div class="modal-header">
                <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="addressError" class="alert alert-danger" style="display: none;"></div>
                <form id="addressForm" novalidate>
                    <div class="mb-3">
                        <label for="addressType" class="form-label">Address Type</label>
                        <select class="form-select bg-dark text-white" id="addressType" required>
                            <option value="">Select Type</option>
                            <option value="Home">Home</option>
                            <option value="Work">Work</option>
                            <option value="Other">Other</option>
                        </select>
                        <div class="invalid-feedback">Please select an address type.</div>
                    </div>
                    <div class="mb-3">
                        <label for="delivery_name" class="form-label">Full Name</label>
                        <input type="text" class="form-control bg-dark text-white" id="delivery_name" required minlength="3" maxlength="50" pattern="[A-Za-z ]+">
                        <div class="invalid-feedback">Please enter a valid name (3-50 characters, letters only).</div>
                    </div>
                    <div class="mb-3">
                        <label for="delivery_phone" class="form-label">Phone Number</label>
                        <input type="tel" class="form-control bg-dark text-white" id="delivery_phone" required pattern="[0-9]{10}">
                        <div class="invalid-feedback">Please enter a valid 10-digit phone number.</div>
                    </div>
                    <div class="mb-3">
                        <label for="altPhone" class="form-label">Alternative Phone Number</label>
                        <input type="tel" class="form-control bg-dark text-white" id="altPhone" pattern="[0-9]{10}">
                        <div class="invalid-feedback">Please enter a valid 10-digit phone number.</div>
                    </div>
                    <div class="mb-3">
                        <label for="landMark" class="form-label">Landmark</label>
                        <input type="text" class="form-control bg-dark text-white" id="landMark" required minlength="3" maxlength="100">
                        <div class="invalid-feedback">Please enter a valid landmark (3-100 characters).</div>
                    </div>
                    <div class="mb-3">
                        <label for="city" class="form-label">City</label>
                        <input type="text" class="form-control bg-dark text-white" id="city" required minlength="3" maxlength="50" pattern="[A-Za-z ]+">
                        <div class="invalid-feedback">Please enter a valid city name (letters only).</div>
                    </div>
                    <div class="mb-3">
                        <label for="state" class="form-label">State</label>
                        <input type="text" class="form-control bg-dark text-white" id="state" required minlength="3" maxlength="50" pattern="[A-Za-z ]+">
                        <div class="invalid-feedback">Please enter a valid state name (letters only).</div>
                    </div>
                    <div class="mb-3">
                        <label for="pincode" class="form-label">Pincode</label>
                        <input type="text" class="form-control bg-dark text-white" id="pincode" required pattern="[0-9]{6}">
                        <div class="invalid-feedback">Please enter a valid 6-digit pincode.</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveAddress()">Save Address</button>
            </div>
        </div>
    </div>
</div>

<script>
function saveAddress() {
    const form = document.getElementById('addressForm');
    const errorDiv = document.getElementById('addressError');
    errorDiv.style.display = 'none';

    if (!form.checkValidity()) {
        form.classList.add('was-validated');
        return;
    }

    const formData = {
        addressType: document.getElementById('addressType').value,
        name: document.getElementById('delivery_name').value,
        phone: document.getElementById('delivery_phone').value,
        altPhone: document.getElementById('altPhone').value,
        landMark: document.getElementById('landMark').value,
        city: document.getElementById('city').value,
        state: document.getElementById('state').value,
        pincode: document.getElementById('pincode').value
    };

    fetch('/add-address', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            $('#addAddressModal').modal('hide');
            location.reload();
        } else {
            errorDiv.textContent = data.message || 'Failed to add address';
            errorDiv.style.display = 'block';
        }
    })
    .catch(error => {
        console.error('Error:', error);
        errorDiv.textContent = 'Failed to add address. Please try again.';
        errorDiv.style.display = 'block';
    });
}
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    async function handleOrder() {
        const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
        const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');

        if (!selectedAddress) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Please select a delivery address'
            });
            return;
        }

        // Check if wallet has sufficient balance
        if (paymentMethod.value === 'wallet') {
            const walletBalance = <%= wallet?.balance || 0 %>;
            const orderTotal = <%= subtotal %>;
            
            if (walletBalance < orderTotal) {
                Swal.fire({
                    icon: 'error',
                    title: 'Insufficient Balance',
                    text: 'Your wallet balance is insufficient for this purchase. Please add money to your wallet or choose a different payment method.',
                    showCancelButton: true,
                    confirmButtonText: 'Add Money to Wallet',
                    cancelButtonText: 'Choose Different Method'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/wallet';
                    }
                });
                return;
            }
        }

        try {
            if (paymentMethod.value === 'online') {
                await handleRazorpayPayment(selectedAddress.value);
            } else {
                const response = await fetch('/checkout/place-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        addressId: selectedAddress.value,
                        paymentMethod: paymentMethod.value
                    })
                });

                const result = await response.json();

                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Order Placed Successfully!',
                        text: 'Thank you for your purchase.',
                        confirmButtonText: 'View Orders'
                    }).then(() => {
                        window.location.href = '/orders';
                    });
                } else {
                    throw new Error(result.message || 'Failed to place order');
                }
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Something went wrong. Please try again.'
            });
        }
    }

    async function handleRazorpayPayment(addressId) {
        try {
            const response = await fetch('/checkout/place-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    addressId: addressId,
                    paymentMethod: 'online'
                })
            });

            const result = await response.json();

            if (!result.success) {
                throw new Error(result.message || 'Failed to create order');
            }

            const options = {
                key: result.key,
                amount: result.order.amount,
                currency: result.order.currency,
                name: 'SneakerVerse',
                description: 'Purchase Payment',
                order_id: result.order.id,
                prefill: {
                    name: result.orderDetails.name,
                    email: result.orderDetails.email
                },
                theme: {
                    color: '#4CAF50'
                },
                handler: async function(response) {
                    try {
                        const verifyResponse = await fetch('/checkout/verify-payment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                ...response,
                                orderId: result.orderDetails.orderId
                            })
                        });

                        const verifyResult = await verifyResponse.json();

                        if (verifyResult.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Payment Successful!',
                                text: 'Your order has been placed.',
                                confirmButtonText: 'View Orders'
                            }).then(() => {
                                window.location.href = '/orders';
                            });
                        } else {
                            throw new Error('Payment verification failed');
                        }
                    } catch (error) {
                        console.error('Verification Error:', error);
                        throw new Error('Payment verification failed');
                    }
                }
            };

            const rzp = new Razorpay(options);
            rzp.open();

        } catch (error) {
            console.error('Razorpay Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Payment Failed',
                text: error.message || 'Failed to process payment. Please try again.'
            });
        }
    }

    // Add this to your existing script section
    document.addEventListener('DOMContentLoaded', function() {
        // Update the Add Address button to open modal
        const addAddressBtn = document.querySelector('.add-address-btn');
        if (addAddressBtn) {
            addAddressBtn.setAttribute('data-bs-toggle', 'modal');
            addAddressBtn.setAttribute('data-bs-target', '#addAddressModal');
        }
    });
</script>

<%- include('../partials/user/footer') %>
