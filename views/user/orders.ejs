<%- include('../partials/user/header') %>

<style>
    .orders-container {
        background: linear-gradient(145deg, #bef17b, #f5f5f5);
        border-radius: 20px;
        box-shadow: 0 8px 30px rgba(226, 255, 98, 0.05);
        padding: 2rem;
        margin: 1rem;
    }
    .orders-header {
        margin-bottom: 2rem;
        position: relative;
        padding-bottom: 1rem;
    }
    .orders-header::after {
        content: '';
        position: absolute;
        left: 0;
        bottom: 0;
        width: 50px;
        height: 3px;
        background: linear-gradient(90deg, #bef17b, #e2ff62);
        border-radius: 2px;
    }
    .nav-tabs {
        border: none;
        margin-bottom: 2rem;
        gap: 1rem;
    }
    .nav-tabs .nav-link {
        border: none;
        padding: 0.8rem 1.5rem;
        border-radius: 12px;
        color: #95a5a6;
        font-weight: 500;
        transition: all 0.3s ease;
        background: transparent;
    }
    .nav-tabs .nav-link.active {
        color: #2c3e50;
        background: rgba(190, 241, 123, 0.2);
    }
    .nav-tabs .nav-link:hover {
        color: #2c3e50;
    }
    .order-card {
        background: #fff;
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 4px 15px rgba(0,0,0,0.05);
    }
    .order-header {
        border-bottom: 1px solid #eee;
        padding-bottom: 1rem;
        margin-bottom: 1rem;
    }
    .order-id {
        font-size: 0.9rem;
        color: #95a5a6;
    }
    .order-date {
        font-size: 0.9rem;
        color: #95a5a6;
    }
    .order-status {
        padding: 0.4rem 1rem;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
    }
    .status-pending {
        background: rgba(255, 193, 7, 0.1);
        color: #ffc107;
    }
    .status-processing {
        background: rgba(13, 110, 253, 0.1);
        color: #0d6efd;
    }
    .status-shipped {
        background: rgba(102, 16, 242, 0.1);
        color: #6610f2;
    }
    .status-delivered {
        background: rgba(25, 135, 84, 0.1);
        color: #198754;
    }
    .status-cancelled {
        background: rgba(220, 53, 69, 0.1);
        color: #dc3545;
    }
    .order-product {
        display: flex;
        align-items: center;
        padding: 1rem 0;
        border-bottom: 1px solid #eee;
    }
    .order-product:last-child {
        border-bottom: none;
    }
    .product-image {
        width: 80px;
        height: 80px;
        border-radius: 10px;
        overflow: hidden;
        margin-right: 1rem;
    }
    .product-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    .product-info {
        flex: 1;
    }
    .product-name {
        font-weight: 500;
        margin-bottom: 0.3rem;
    }
    .product-details {
        font-size: 0.9rem;
        color: #95a5a6;
    }
    .product-price {
        color: #2c3e50;
        font-weight: 600;
    }
    .order-total {
        font-size: 1.1rem;
        font-weight: 600;
        color: #2c3e50;
        margin-top: 1rem;
        text-align: right;
    }
    .empty-orders {
        text-align: center;
        padding: 3rem 0;
    }
    .empty-orders i {
        font-size: 4rem;
        color: #95a5a6;
        margin-bottom: 1rem;
    }
    .empty-orders h3 {
        color: #2c3e50;
        margin-bottom: 1rem;
    }
    .empty-orders p {
        color: #95a5a6;
        margin-bottom: 2rem;
    }
    .btn-custom {
        background: linear-gradient(90deg, #bef17b, #e2ff62);
        color: #2c3e50;
        border: none;
        padding: 0.8rem 1.5rem;
        border-radius: 10px;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    .btn-custom:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(190, 241, 123, 0.2);
    }
    .btn-return {
        background: linear-gradient(90deg, #f0a500, #f5d100);
        border: none;
        border-radius: 12px;
        padding: 0.6rem 1.2rem;
        color: #fff;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    .btn-return:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(240, 165, 0, 0.2);
    }
    .return-status-pending {
        background: rgba(255, 193, 7, 0.1);
        color: #ffc107;
        padding: 0.4rem 1rem;
        border-radius: 20px;
        font-size: 0.85rem;
    }
    .return-status-approved {
        background: rgba(25, 135, 84, 0.1);
        color: #198754;
        padding: 0.4rem 1rem;
        border-radius: 20px;
        font-size: 0.85rem;
    }
    .return-status-rejected {
        background: rgba(220, 53, 69, 0.1);
        color: #dc3545;
        padding: 0.4rem 1rem;
        border-radius: 20px;
        font-size: 0.85rem;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <%- include('../partials/user/usersidebar') %>
        
        <div class="col-md-9">
            <div class="orders-container">
                <h4 class="orders-header">My Orders</h4>
                
                <!-- Flash Messages -->
                <% if (error_msg && error_msg.length > 0) { %>
                    <div class="alert alert-danger"><%= error_msg %></div>
                <% } %>
                <% if (success_msg && success_msg.length > 0) { %>
                    <div class="alert alert-success"><%= success_msg %></div>
                <% } %>
                
                <!-- Order Tabs -->
                <ul class="nav nav-tabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" data-bs-toggle="tab" href="#active">Active Orders</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#delivered">Delivered</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#cancelled">Cancelled</a>
                    </li>
                </ul>
                
                <div class="tab-content" id="orderTabContent">
                    <!-- Active Orders Tab -->
                    <div class="tab-pane fade show active" id="active" role="tabpanel">
                        <% const activeOrders = orders.filter(order => 
                            order.status !== 'Cancelled' && order.status !== 'Delivered'
                        ); %>
                        
                        <% if (activeOrders.length === 0) { %>
                            <div class="empty-orders">
                                <i class="fas fa-shopping-bag"></i>
                                <h3>No active orders</h3>
                                <p>When you place an order, it will appear here</p>
                                <a href="/home" class="btn btn-custom">Continue Shopping</a>
                            </div>
                        <% } else { %>
                            <% activeOrders.forEach(function(order) { %>
                                <div class="order-card" data-order-id="<%= order._id %>">
                                    <div class="order-header">
                                        <div class="row align-items-center">
                                            <div class="col-md-4">
                                                <div class="order-id">Order #<%= order._id %></div>
                                                <div class="order-date"><%= new Date(order.orderDate).toLocaleDateString() %></div>
                                            </div>
                                            <div class="col-md-4 text-center">
                                                <span class="order-status status-<%= order.status.toLowerCase() %>">
                                                    <%= order.status %>
                                                </span>
                                                <% if (order.paymentMethod === 'online' || order.paymentMethod === 'wallet') { %>
                                                    <br>
                                                    <span class="payment-status mt-2 badge <%= 
                                                        order.paymentStatus === 'Paid' ? 'bg-success' : 
                                                        order.paymentStatus === 'Failed' ? 'bg-danger' : 
                                                        'bg-warning' %>">
                                                        Payment: <%= order.paymentStatus %>
                                                    </span>
                                                <% } %>
                                            </div>
                                            <div class="col-md-4 text-end">
                                                <% if ((order.paymentStatus === 'Failed' || order.paymentStatus === 'Pending') && order.paymentMethod === 'online') { %>
                                                    <button class="btn btn-danger mb-2" onclick="retryPayment('<%= order._id %>')">
                                                        <i class="fas fa-redo-alt me-1"></i> Retry Payment
                                                    </button>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="order-products">
                                        <% order.items.forEach(function(item) { %>
                                            <div class="order-product">
                                                <div class="product-image">
                                                    <img src="<%= item.product.productImage ? '/uploads/product-images/' + item.product.productImage[0] : '/images/no-image.jpg' %>" 
                                                         alt="<%= item.product.productName %>">
                                                </div>
                                                <div class="product-info">
                                                    <div class="product-name"><%= item.product.productName %></div>
                                                    <div class="product-details">
                                                        Size: <%= item.size %><br>
                                                        Quantity: <%= item.quantity %><br>
                                                        Price: ₹<%= item.price.toFixed(2) %>
                                                    </div>
                                                    <div class="product-price">₹<%= item.price %></div>
                                                    <div class="product-actions mt-2">
                                                        <a href="/order-product-details/<%= order._id %>/<%= item.product._id %>" 
                                                           class="btn btn-sm btn-outline-primary"
                                                           onclick="console.log('Clicking view details for:', {
                                                               orderId: '<%= order._id %>',
                                                               productId: '<%= item.product._id %>'
                                                           })">
                                                            View Details
                                                        </a>
                                                        <% if (item.status === 'Delivered' && !item.returnRequest) { %>
                                                            <button class="btn btn-sm btn-warning ms-2" onclick="openReturnModal('<%= order._id %>', '<%= item.product._id %>', '<%= item.size %>', '<%= item.product.productName %>')">
                                                                Return
                                                            </button>
                                                        <% } %>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }); %>
                                    </div>
                                    
                                    <div class="order-total">
                                        Total: ₹<%= order.totalAmount %>
                                    </div>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>

                    <!-- Delivered Orders Tab -->
                    <div class="tab-pane fade" id="delivered" role="tabpanel">
                        <% const deliveredOrders = orders.filter(order => order.status === 'Delivered'); %>
                        
                        <% if (deliveredOrders.length === 0) { %>
                            <div class="empty-orders">
                                <i class="fas fa-box-open"></i>
                                <p>No delivered orders yet</p>
                            </div>
                        <% } else { %>
                            <% deliveredOrders.forEach(order => { %>
                                <div class="order-card">
                                    <div class="order-header d-flex justify-content-between align-items-center">
                                        <div>
                                            <div class="order-id">Order #<%= order._id %></div>
                                            <div class="order-date"><%= new Date(order.orderDate).toLocaleDateString() %></div>
                                        </div>
                                        <span class="order-status status-delivered">Delivered</span>
                                    </div>
                                    
                                    <% order.items.forEach(item => { %>
                                        <div class="order-product">
                                            <img src="/uploads/product-images/<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>" style="width: 80px; height: 80px; object-fit: cover; margin-right: 1rem;">
                                            <div class="flex-grow-1">
                                                <h6 class="mb-1"><%= item.product.productName %></h6>
                                                <p class="mb-1">Size: <%= item.size %></p>
                                                <p class="mb-1">Quantity: <%= item.quantity %></p>
                                                <p class="mb-0">₹<%= item.price.toFixed(2) %></p>
                                                <div class="mt-2">
                                                    <a href="/order-product-details/<%= order._id %>/<%= item.product._id %>" 
                                                       class="btn btn-sm btn-outline-primary"
                                                       onclick="console.log('Clicking view details for:', {
                                                           orderId: '<%= order._id %>',
                                                           productId: '<%= item.product._id %>'
                                                       })">
                                                        View Details
                                                    </a>
                                                </div>
                                            </div>
                                            <div class="ms-3">
                                                <% if (item.returnRequest) { %>
                                                    <span class="return-status-<%= item.returnRequest.status.toLowerCase() %>">
                                                        Return <%= item.returnRequest.status %>
                                                    </span>
                                                <% } else { %>
                                                    <button class="btn btn-sm btn-warning ms-2" onclick="openReturnModal('<%= order._id %>', '<%= item.product._id %>', '<%= item.size %>', '<%= item.product.productName %>')">
                                                        Return
                                                    </button>
                                                <% } %>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>

                    <!-- Cancelled Orders Tab -->
                    <div class="tab-pane fade" id="cancelled" role="tabpanel">
                        <% const cancelledOrders = orders.filter(order => order.status === 'Cancelled'); %>
                        
                        <% if (cancelledOrders.length === 0) { %>
                            <div class="empty-orders">
                                <i class="fas fa-times-circle"></i>
                                <h3>No cancelled orders</h3>
                                <p>Your cancelled orders will appear here</p>
                            </div>
                        <% } else { %>
                            <% cancelledOrders.forEach(function(order) { %>
                                <div class="order-card">
                                    <div class="order-header">
                                        <div class="row align-items-center">
                                            <div class="col-md-4">
                                                <div class="order-id">Order #<%= order._id %></div>
                                                <div class="order-date"><%= new Date(order.orderDate).toLocaleDateString() %></div>
                                            </div>
                                            <div class="col-md-4 text-center">
                                                <span class="order-status status-<%= order.status.toLowerCase() %>">
                                                    <%= order.status %>
                                                </span>
                                            </div>
                                            <div class="col-md-4 text-end">
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="order-products">
                                        <% order.items.forEach(function(item) { %>
                                            <div class="order-product">
                                                <div class="product-image">
                                                    <img src="<%= item.product.productImage ? '/uploads/product-images/' + item.product.productImage[0] : '/images/no-image.jpg' %>" 
                                                         alt="<%= item.product.productName %>">
                                                </div>
                                                <div class="product-info">
                                                    <div class="product-name"><%= item.product.productName %></div>
                                                    <div class="product-details">
                                                        Size: <%= item.size %> | Quantity: <%= item.quantity %>
                                                    </div>
                                                    <div class="product-price">₹<%= item.price %></div>
                                                    <div class="product-actions mt-2">
                                                        <a href="/order-product-details/<%= order._id %>/<%= item.product._id %>" 
                                                           class="btn btn-sm btn-outline-primary"
                                                           onclick="console.log('Clicking view details for:', {
                                                               orderId: '<%= order._id %>',
                                                               productId: '<%= item.product._id %>'
                                                           })">
                                                            View Details
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }); %>
                                    </div>
                                    
                                    <div class="order-total">
                                        Total: ₹<%= order.totalAmount %>
                                    </div>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Return Request Modal -->
<div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnModalLabel">Return Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="productNameInModal"></p>
                <div class="mb-3">
                    <label for="returnReason" class="form-label">Reason for Return</label>
                    <textarea class="form-control" id="returnReason" rows="3" required></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitReturnRequest()">Submit Return Request</button>
            </div>
        </div>
    </div>
</div>

<script>
    let currentReturnData = null;

    function openReturnModal(orderId, productId, size, productName) {
        currentReturnData = { orderId, productId, size };
        document.getElementById('productNameInModal').textContent = productName;
        var returnModal = new bootstrap.Modal(document.getElementById('returnModal'));
        returnModal.show();
    }

    async function retryPayment(orderId) {
        try {
            // Show loading
            Swal.fire({
                title: 'Processing',
                text: 'Initializing payment...',
                allowOutsideClick: false,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            console.log('Initiating retry payment for order:', orderId);
            const response = await fetch('/retry-payment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId })
            });

            const data = await response.json();
            console.log('Retry payment response:', data);
            
            // Close loading dialog
            Swal.close();
            
            if (data.success) {
                const options = {
                    key: data.key,
                    amount: data.orderDetails.amount,
                    currency: "INR",
                    name: "SneakerVerse",
                    description: "Payment for Order #" + orderId,
                    order_id: data.order.id,
                    handler: function (response) {
                        verifyRetryPayment(response, orderId);
                    },
                    prefill: {
                        name: data.orderDetails.name,
                        email: data.orderDetails.email
                    },
                    theme: {
                        color: "#3399cc"
                    }
                };

                console.log('Opening Razorpay with options:', options);
                const rzp = new Razorpay(options);
                rzp.on('payment.failed', function (response) {
                    console.error('Payment failed:', response);
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: 'The payment could not be processed. Please try again.'
                    });
                });
                rzp.open();
            } else {
                console.error('Failed to initialize payment:', data.message);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message || 'Failed to initialize payment'
                });
            }
        } catch (error) {
            console.error('Error in retry payment:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to initialize payment. Please try again.'
            });
        }
    }

    async function verifyRetryPayment(response, orderId) {
        try {
            console.log('Verifying payment with data:', {
                orderId,
                razorpay_order_id: response.razorpay_order_id,
                razorpay_payment_id: response.razorpay_payment_id,
                razorpay_signature: response.razorpay_signature
            });

            const verifyResponse = await fetch('/verify-payment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    orderId,
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_signature: response.razorpay_signature
                })
            });

            const data = await verifyResponse.json();
            console.log('Verify payment response:', data);
            
            if (data.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Payment successful!',
                    showConfirmButton: false,
                    timer: 2000
                });
                window.location.reload();
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message || 'Payment verification failed'
                });
            }
        } catch (error) {
            console.error('Error in verify payment:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Payment verification failed. Please contact support.'
            });
        }
    }

    function viewOrderDetails(orderId) {
        window.location.href = `/order-details/${orderId}`;
    }
</script>

<!-- Include SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Include Razorpay SDK -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<%- include('../partials/user/footer') %>
