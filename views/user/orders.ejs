<%- include('../partials/user/header') %>

<style>
    .orders-container {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 20px;
    }

    .order-card {
        background-color: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        padding: 15px;
    }

    .order-header {
        padding-bottom: 10px;
    }

    .product-image {
        max-width: 100px;
        height: auto;
        border-radius: 4px;
    }

    .nav-tabs {
        border-bottom: 1px solid #dee2e6;
    }

    .nav-tabs .nav-link {
        color: #495057;
        border: none;
        border-bottom: 2px solid transparent;
        padding: 10px 20px;
        font-weight: 500;
    }

    .nav-tabs .nav-link.active {
        color: #a1ca40;
        background: none;
        border-bottom: 2px solid #a1ca40;
    }

    .nav-tabs .nav-link:hover {
        border-color: transparent;
        border-bottom: 2px solid #a1ca40;
        color: #a1ca40;
    }

    .badge {
        padding: 8px 12px;
        font-size: 0.8rem;
    }

    .cancel-item-btn {
        white-space: nowrap;
    }

    .order-item {
        transition: background-color 0.2s ease;
    }

    .order-item:hover {
        background-color: #f8f9fa;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <%- include('../partials/user/usersidebar') %>
        
        <!-- Main Content -->
        <div class="col-md-9 ms-auto px-4">
            <div class="orders-container mt-4">
                <h4 class="mb-4">My Orders</h4>
                
                <!-- Flash Messages -->
                <% if (error_msg && error_msg.length > 0) { %>
                    <div class="alert alert-danger" role="alert">
                        <%= error_msg %>
                    </div>
                <% } %>
                <% if (success_msg && success_msg.length > 0) { %>
                    <div class="alert alert-success" role="alert">
                        <%= success_msg %>
                    </div>
                <% } %>

                <ul class="nav nav-tabs" id="orderTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="active-tab" data-bs-toggle="tab" data-bs-target="#active" type="button" role="tab">Active</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="cancelled-tab" data-bs-toggle="tab" data-bs-target="#cancelled" type="button" role="tab">Cancelled</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="delivered-tab" data-bs-toggle="tab" data-bs-target="#delivered" type="button" role="tab">Delivered</button>
                    </li>
                </ul>

                <div class="tab-content mt-3" id="orderTabContent">
                    <!-- Active Orders Tab -->
                    <div class="tab-pane fade show active" id="active" role="tabpanel" aria-labelledby="active-tab">
                        <% const activeOrders = orders.filter(order => 
                            order.status !== 'Cancelled' && order.status !== 'Delivered'
                        ); %>
                        <% if (activeOrders.length === 0) { %>
                            <div class="text-center py-5">
                                <i class="fas fa-shopping-bag mb-3" style="font-size: 48px; color: #ccc;"></i>
                                <h5>No Active Orders</h5>
                                <p class="text-muted">You don't have any active orders at the moment.</p>
                            </div>
                        <% } else { %>
                            <% activeOrders.forEach(function(order) { %>
                                <div class="order-card mb-4" data-order-id="<%= order._id %>">
                                    <div class="order-header mb-3">
                                        <div class="row align-items-center">
                                            <div class="col-md-8">
                                                <p class="text-muted mb-1">Order ID: <%= order._id %></p>
                                                <p class="text-muted mb-1">Ordered: <%= new Date(order.orderDate).toLocaleDateString() %></p>
                                                <p class="mb-1">Payment Method: <%= order.paymentMethod.toUpperCase() %></p>
                                                <p class="mb-1">Payment Status: 
                                                    <span class="badge <%= order.paymentStatus === 'Paid' ? 'bg-success' : (order.paymentStatus === 'Failed' ? 'bg-danger' : 'bg-warning') %>">
                                                        <%= order.paymentStatus %>
                                                    </span>
                                                </p>
                                                <h5 class="mb-2">Order Total: ₹<%= order.totalAmount %></h5>
                                            </div>
                                            <div class="col-md-4 text-end">
                                                <% if (order.paymentMethod === 'online' && (order.paymentStatus === 'Failed' || order.paymentStatus === 'Pending') && order.status !== 'Cancelled') { %>
                                                    <button class="btn btn-primary btn-sm mb-2" onclick="retryPayment('<%= order._id %>')">
                                                        Pay Now
                                                    </button>
                                                <% } %>
                                                <% if (order.status !== 'Cancelled' && order.status !== 'Delivered') { %>
                                                    <button class="btn btn-danger btn-sm mb-2" onclick="cancelOrder('<%= order._id %>')">
                                                        Cancel Order
                                                    </button>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>

                                    <% order.items.forEach(function(item) { %>
                                        <div class="order-item py-3 border-top">
                                            <div class="row align-items-center">
                                                <div class="col-md-2">
                                                    <img src="<%= item.product.productImage ? '/uploads/product-images/' + item.product.productImage[0] : '/images/no-image.jpg' %>" 
                                                         alt="Product Image" 
                                                         class="img-fluid rounded">
                                                </div>
                                                <div class="col-md-7">
                                                    <h6 class="mb-1"><%= item.product.productName %></h6>
                                                    <p class="mb-1">Size: <%= item.size %></p>
                                                    <p class="mb-1">Quantity: <%= item.quantity %></p>
                                                    <% 
                                                        let displayPrice = item.product.salesPrice;
                                                        let discountPercentage = 0;
                                                        
                                                        // Check for product offer first
                                                        if (item.product.offer && item.product.offer.discountedPrice) {
                                                            displayPrice = item.product.offer.discountedPrice;
                                                            discountPercentage = item.product.offer.discountPercentage;
                                                        }
                                                        // Then check for category offer if no product offer exists
                                                        else if (item.product.category && item.product.category.categoryOffer > 0) {
                                                            displayPrice = Math.floor(item.product.salesPrice - (item.product.salesPrice * item.product.category.categoryOffer / 100));
                                                            discountPercentage = item.product.category.categoryOffer;
                                                        }
                                                    %>
                                                    
                                                    <% if (discountPercentage > 0) { %>
                                                        <p class="mb-1">
                                                            Price: ₹<%= displayPrice.toLocaleString('en-IN') %>
                                                            <small class="text-muted text-decoration-line-through">
                                                                ₹<%= item.product.salesPrice.toLocaleString('en-IN') %>
                                                            </small>
                                                            <span class="badge bg-danger"><%= discountPercentage %>% OFF</span>
                                                        </p>
                                                    <% } else { %>
                                                        <p class="mb-1">Price: ₹<%= displayPrice.toLocaleString('en-IN') %></p>
                                                    <% } %>
                                                    <p class="mb-0">Total: ₹<%= (displayPrice * item.quantity).toLocaleString('en-IN') %></p>
                                                </div>
                                                <div class="col-md-3 text-end">
                                                    <p class="mb-2">
                                                        <span class="badge <%= item.status === 'Cancelled' ? 'bg-danger' : (item.status === 'Delivered' ? 'bg-success' : 'bg-primary') %>">
                                                            <%= item.status %>
                                                        </span>
                                                    </p>
                                                    <h6 class="mb-2">Item Total: ₹<%= item.price * item.quantity %></h6>
                                                    <a href="/order-details/<%= order._id %>?itemId=<%= item._id %>" class="btn btn-outline-primary btn-sm">
                                                        View Details
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>

                    <!-- Cancelled Orders Tab -->
                    <div class="tab-pane fade" id="cancelled" role="tabpanel" aria-labelledby="cancelled-tab">
                        <% const cancelledOrders = orders.filter(order => order.status === 'Cancelled'); %>
                        <% if (cancelledOrders.length === 0) { %>
                            <div class="text-center py-5">
                                <i class="fas fa-times-circle mb-3" style="font-size: 48px; color: #ccc;"></i>
                                <h5>No Cancelled Orders</h5>
                                <p class="text-muted">You don't have any cancelled orders.</p>
                            </div>
                        <% } else { %>
                            <% cancelledOrders.forEach(function(order) { %>
                                <div class="order-card mb-4" data-order-id="<%= order._id %>">
                                    <div class="order-header mb-3">
                                        <div class="row align-items-center">
                                            <div class="col-md-8">
                                                <p class="text-muted mb-1">Order ID: <%= order._id %></p>
                                                <p class="text-muted mb-1">Ordered: <%= new Date(order.orderDate).toLocaleDateString() %></p>
                                                <p class="mb-1">Payment Method: <%= order.paymentMethod.toUpperCase() %></p>
                                                <p class="mb-1">Payment Status: 
                                                    <span class="badge <%= order.paymentStatus === 'Paid' ? 'bg-success' : (order.paymentStatus === 'Failed' ? 'bg-danger' : 'bg-warning') %>">
                                                        <%= order.paymentStatus %>
                                                    </span>
                                                </p>
                                                <h5 class="mb-2">Order Total: ₹<%= order.totalAmount %></h5>
                                            </div>
                                            <div class="col-md-4 text-end">
                                                <% if (order.paymentMethod === 'online' && (order.paymentStatus === 'Failed' || order.paymentStatus === 'Pending') && order.status !== 'Cancelled') { %>
                                                    <button class="btn btn-primary btn-sm mb-2" onclick="retryPayment('<%= order._id %>')">
                                                        Pay Now
                                                    </button>
                                                <% } %>
                                                <% if (order.status !== 'Cancelled' && order.status !== 'Delivered') { %>
                                                    <button class="btn btn-danger btn-sm mb-2" onclick="cancelOrder('<%= order._id %>')">
                                                        Cancel Order
                                                    </button>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>

                                    <% order.items.forEach(function(item) { %>
                                        <div class="order-item py-3 border-top">
                                            <div class="row align-items-center">
                                                <div class="col-md-2">
                                                    <img src="<%= item.product.productImage ? '/uploads/product-images/' + item.product.productImage[0] : '/images/no-image.jpg' %>" 
                                                         alt="Product Image" 
                                                         class="img-fluid rounded">
                                                </div>
                                                <div class="col-md-7">
                                                    <h6 class="mb-1"><%= item.product.productName %></h6>
                                                    <p class="mb-1">Size: <%= item.size %></p>
                                                    <p class="mb-1">Quantity: <%= item.quantity %></p>
                                                    <% 
                                                        let displayPrice = item.product.salesPrice;
                                                        let discountPercentage = 0;
                                                        
                                                        // Check for product offer first
                                                        if (item.product.offer && item.product.offer.discountedPrice) {
                                                            displayPrice = item.product.offer.discountedPrice;
                                                            discountPercentage = item.product.offer.discountPercentage;
                                                        }
                                                        // Then check for category offer if no product offer exists
                                                        else if (item.product.category && item.product.category.categoryOffer > 0) {
                                                            displayPrice = Math.floor(item.product.salesPrice - (item.product.salesPrice * item.product.category.categoryOffer / 100));
                                                            discountPercentage = item.product.category.categoryOffer;
                                                        }
                                                    %>
                                                    
                                                    <% if (discountPercentage > 0) { %>
                                                        <p class="mb-1">
                                                            Price: ₹<%= displayPrice.toLocaleString('en-IN') %>
                                                            <small class="text-muted text-decoration-line-through">
                                                                ₹<%= item.product.salesPrice.toLocaleString('en-IN') %>
                                                            </small>
                                                            <span class="badge bg-danger"><%= discountPercentage %>% OFF</span>
                                                        </p>
                                                    <% } else { %>
                                                        <p class="mb-1">Price: ₹<%= displayPrice.toLocaleString('en-IN') %></p>
                                                    <% } %>
                                                    <p class="mb-0">Total: ₹<%= (displayPrice * item.quantity).toLocaleString('en-IN') %></p>
                                                </div>
                                                <div class="col-md-3 text-end">
                                                    <p class="mb-2">
                                                        <span class="badge bg-danger">Cancelled</span>
                                                    </p>
                                                    <h6 class="mb-2">Item Total: ₹<%= item.price * item.quantity %></h6>
                                                    <a href="/order-details/<%= order._id %>?itemId=<%= item._id %>" class="btn btn-outline-primary btn-sm mt-2">
                                                        View Details
                                                    </a>
                                                </div>
                                                <div class="col-md-2 text-end">
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>

                    <!-- Delivered Orders Tab -->
                    <div class="tab-pane fade" id="delivered" role="tabpanel" aria-labelledby="delivered-tab">
                        <% const deliveredOrders = orders.filter(order => order.status === 'Delivered'); %>
                        <% if (deliveredOrders.length === 0) { %>
                            <div class="text-center py-5">
                                <i class="fas fa-check-circle mb-3" style="font-size: 48px; color: #ccc;"></i>
                                <h5>No Delivered Orders</h5>
                                <p class="text-muted">You don't have any delivered orders yet.</p>
                            </div>
                        <% } else { %>
                            <% deliveredOrders.forEach(function(order) { %>
                                <div class="order-card mb-4" data-order-id="<%= order._id %>">
                                    <div class="order-header mb-3">
                                        <div class="row align-items-center">
                                            <div class="col-md-8">
                                                <p class="text-muted mb-1">Order ID: <%= order._id %></p>
                                                <p class="text-muted mb-1">Ordered: <%= new Date(order.orderDate).toLocaleDateString() %></p>
                                                <p class="mb-1">Payment Method: <%= order.paymentMethod.toUpperCase() %></p>
                                                <p class="mb-1">Payment Status: 
                                                    <span class="badge <%= order.paymentStatus === 'Paid' ? 'bg-success' : (order.paymentStatus === 'Failed' ? 'bg-danger' : 'bg-warning') %>">
                                                        <%= order.paymentStatus %>
                                                    </span>
                                                </p>
                                                <h5 class="mb-2">Order Total: ₹<%= order.totalAmount %></h5>
                                            </div>
                                            <div class="col-md-4 text-end">
                                                <% if (order.paymentMethod === 'online' && (order.paymentStatus === 'Failed' || order.paymentStatus === 'Pending') && order.status !== 'Cancelled') { %>
                                                    <button class="btn btn-primary btn-sm mb-2" onclick="retryPayment('<%= order._id %>')">
                                                        Pay Now
                                                    </button>
                                                <% } %>
                                                <% if (order.status !== 'Cancelled' && order.status !== 'Delivered') { %>
                                                    <button class="btn btn-danger btn-sm mb-2" onclick="cancelOrder('<%= order._id %>')">
                                                        Cancel Order
                                                    </button>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>

                                    <% order.items.forEach(function(item) { %>
                                        <div class="order-item py-3 border-top">
                                            <div class="row align-items-center">
                                                <div class="col-md-2">
                                                    <img src="<%= item.product.productImage ? '/uploads/product-images/' + item.product.productImage[0] : '/images/no-image.jpg' %>" 
                                                         alt="Product Image" 
                                                         class="img-fluid rounded">
                                                </div>
                                                <div class="col-md-7">
                                                    <h6 class="mb-1"><%= item.product.productName %></h6>
                                                    <p class="mb-1">Size: <%= item.size %></p>
                                                    <p class="mb-1">Quantity: <%= item.quantity %></p>
                                                    <% 
                                                        let displayPrice = item.product.salesPrice;
                                                        let discountPercentage = 0;
                                                        
                                                        // Check for product offer first
                                                        if (item.product.offer && item.product.offer.discountedPrice) {
                                                            displayPrice = item.product.offer.discountedPrice;
                                                            discountPercentage = item.product.offer.discountPercentage;
                                                        }
                                                        // Then check for category offer if no product offer exists
                                                        else if (item.product.category && item.product.category.categoryOffer > 0) {
                                                            displayPrice = Math.floor(item.product.salesPrice - (item.product.salesPrice * item.product.category.categoryOffer / 100));
                                                            discountPercentage = item.product.category.categoryOffer;
                                                        }
                                                    %>
                                                    
                                                    <% if (discountPercentage > 0) { %>
                                                        <p class="mb-1">
                                                            Price: ₹<%= displayPrice.toLocaleString('en-IN') %>
                                                            <small class="text-muted text-decoration-line-through">
                                                                ₹<%= item.product.salesPrice.toLocaleString('en-IN') %>
                                                            </small>
                                                            <span class="badge bg-danger"><%= discountPercentage %>% OFF</span>
                                                        </p>
                                                    <% } else { %>
                                                        <p class="mb-1">Price: ₹<%= displayPrice.toLocaleString('en-IN') %></p>
                                                    <% } %>
                                                    <p class="mb-0">Total: ₹<%= (displayPrice * item.quantity).toLocaleString('en-IN') %></p>
                                                </div>
                                                <div class="col-md-3 text-end">
                                                    <p class="mb-2">
                                                        <span class="badge bg-success">Delivered</span>
                                                    </p>
                                                    <h6 class="mb-2">Item Total: ₹<%= item.price * item.quantity %></h6>
                                                    <a href="/order-details/<%= order._id %>?itemId=<%= item._id %>" class="btn btn-outline-primary btn-sm mt-2">
                                                        View Details
                                                    </a>
                                                </div>
                                                <div class="col-md-2 text-end">
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();

    // Listen for order status updates
    socket.on('orderStatusUpdate', function(data) {
        console.log('Order status update received:', data);
        
        // Find the order card
        const orderCard = document.querySelector(`[data-order-id="${data.orderId}"]`);
        if (orderCard) {
            // Update order status badge
            const statusBadge = orderCard.querySelector('.order-status');
            if (statusBadge) {
                statusBadge.textContent = data.status;
                
                // Update badge color
                statusBadge.className = 'badge order-status';
                switch(data.status.toLowerCase()) {
                    case 'delivered':
                        statusBadge.classList.add('bg-success');
                        break;
                    case 'cancelled':
                        statusBadge.classList.add('bg-danger');
                        break;
                    default:
                        statusBadge.classList.add('bg-warning');
                }
            }

            // Update items status
            data.items.forEach(item => {
                const itemStatus = orderCard.querySelector(`[data-item-id="${item.product._id}"]`);
                if (itemStatus) {
                    itemStatus.textContent = item.status;
                    
                    // Update item status color
                    itemStatus.className = 'badge';
                    switch(item.status.toLowerCase()) {
                        case 'delivered':
                            itemStatus.classList.add('bg-success');
                            break;
                        case 'cancelled':
                            itemStatus.classList.add('bg-danger');
                            break;
                        default:
                            itemStatus.classList.add('bg-warning');
                    }
                }
            });

            // Move order to appropriate tab
            const currentTab = orderCard.closest('.tab-pane');
            let targetTab;
            
            switch(data.status.toLowerCase()) {
                case 'delivered':
                    targetTab = document.getElementById('delivered');
                    break;
                case 'cancelled':
                    targetTab = document.getElementById('cancelled');
                    break;
                default:
                    targetTab = document.getElementById('active');
            }

            if (targetTab && currentTab !== targetTab) {
                // Clone the order card
                const newCard = orderCard.cloneNode(true);
                
                // Remove from current tab
                orderCard.remove();
                
                // Add to target tab
                const noOrdersMessage = targetTab.querySelector('.text-center.py-5');
                if (noOrdersMessage) {
                    noOrdersMessage.remove();
                }
                targetTab.appendChild(newCard);
            }
        }
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    async function retryPayment(orderId) {
        try {
            // Show loading
            Swal.fire({
                title: 'Initializing Payment',
                text: 'Please wait...',
                allowOutsideClick: false,
                showConfirmButton: false,
                willOpen: () => {
                    Swal.showLoading();
                }
            });

            const response = await fetch('/retry-payment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId })
            });

            const data = await response.json();
            
            // Close loading dialog
            Swal.close();

            if (!data.success) {
                throw new Error(data.message || 'Failed to initialize payment');
            }

            const options = {
                key: data.key,
                amount: data.order.amount,
                currency: "INR",
                name: "SneakerVerse",
                description: "Payment for Order #" + orderId,
                order_id: data.order.id,
                handler: async function (response) {
                    try {
                        // Show processing message
                        Swal.fire({
                            title: 'Processing Payment',
                            text: 'Please wait while we verify your payment...',
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            willOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        const verifyResponse = await fetch('/verify-payment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                orderId: orderId,
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_signature: response.razorpay_signature
                            })
                        });

                        const verifyData = await verifyResponse.json();
                        
                        if (verifyData.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Payment Successful',
                                text: 'Your payment has been processed successfully!'
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            throw new Error(verifyData.message || 'Payment verification failed');
                        }
                    } catch (error) {
                        console.error('Payment verification error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed',
                            text: error.message || 'Payment verification failed. Please try again.'
                        });
                    }
                },
                prefill: {
                    name: "<%= user.name %>",
                    email: "<%= user.email %>"
                },
                theme: {
                    color: "#3399cc"
                }
            };

            const rzp = new Razorpay(options);
            rzp.open();

            rzp.on('payment.failed', function (response) {
                Swal.fire({
                    icon: 'error',
                    title: 'Payment Failed',
                    text: 'The payment attempt failed. Please try again.'
                });
            });

        } catch (error) {
            console.error('Payment error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Failed to initialize payment. Please try again.'
            });
        }
    }

    function cancelOrder(orderId) {
        Swal.fire({
            title: 'Cancel Order',
            text: 'Are you sure you want to cancel this order?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, cancel it!'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/cancel-order/${orderId}`;
            }
        });
    }
</script>

<%- include('../partials/user/footer') %>
