
<div class="container-fluid">
    <div class="row">
        <%- include('../../views/admin/adminPartials/sidebar.ejs') %>

        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Manage Offers</h1>
            </div>

            <!-- Add New Offer Form -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Add New Offer</h5>
                </div>
                <div class="card-body">
                    <form id="offerForm" onsubmit="return handleOfferSubmit(event)">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Offer Type</label>
                                <select class="form-select" name="type" required>
                                    <option value="">Select Type</option>
                                    <option value="product">Product</option>
                                    <option value="category">Category</option>
                                </select>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label class="form-label">Target</label>
                                <select class="form-select" name="targetId" required>
                                    <option value="">Select Target</option>
                                </select>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label class="form-label">Discount Percentage</label>
                                <input type="number" class="form-control" name="discountPercentage" 
                                       min="0" max="100" required>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label class="form-label">End Date</label>
                                <input type="datetime-local" class="form-control" name="endDate" required>
                            </div>

                            <div class="col-12">
                                <button type="submit" class="btn btn-primary">Add Offer</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Current Offers Table -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Current Offers</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Type</th>
                                    <th>Target Name</th>
                                    <th>Discount</th>
                                    <th>Start Date</th>
                                    <th>End Date</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% offers.forEach(function(offer) { %>
                                    <tr>
                                        <td><%= offer.type.charAt(0).toUpperCase() + offer.type.slice(1) %></td>
                                        <td><%= offer.targetName %></td>
                                        <td><%= offer.discountPercentage %>%</td>
                                        <td><%= new Date(offer.startDate).toLocaleDateString() %></td>
                                        <td><%= new Date(offer.endDate).toLocaleDateString() %></td>
                                        <td>
                                            <% if (new Date(offer.endDate) < new Date()) { %>
                                                <span class="badge bg-danger">Expired</span>
                                            <% } else if (offer.isActive) { %>
                                                <span class="badge bg-success">Active</span>
                                            <% } else { %>
                                                <span class="badge bg-warning">Inactive</span>
                                            <% } %>
                                        </td>
                                        <td>
                                            <form action="/admin/offers/delete/<%= offer._id %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this offer?');">
                                                <button type="submit">Delete</button>
                                            </form>
                                        </td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>

<!-- Add this before closing body tag -->
<script>
const typeSelect = document.querySelector('select[name="type"]');
const targetSelect = document.querySelector('select[name="targetId"]');
const products = <%- JSON.stringify(products) %>;
const categories = <%- JSON.stringify(categories) %>;

typeSelect.addEventListener('change', function() {
    targetSelect.innerHTML = '<option value="">Select Target</option>';
    
    if (this.value === 'product') {
        products.forEach(product => {
            targetSelect.innerHTML += `<option value="${product._id}">${product.productName}</option>`;
        });
    } else if (this.value === 'category') {
        categories.forEach(category => {
            targetSelect.innerHTML += `<option value="${category._id}">${category.name}</option>`;
        });
    }
});

async function handleOfferSubmit(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const data = Object.fromEntries(formData.entries());
    
    try {
        const response = await fetch('/admin/offers/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: result.message,
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                window.location.reload();
            });
        } else {
            throw new Error(result.message);
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: error.message
        });
    }
    
    return false;
}

async function deleteOffer(offerId) {
    try {
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: "This will remove the offer immediately.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        });

        if (result.isConfirmed) {
            const response = await fetch(`/admin/offers/${offerId}`, {
                method: 'DELETE'
            });
            
            const data = await response.json();
            
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Deleted!',
                    text: data.message,
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    window.location.reload();
                });
            } else {
                throw new Error(data.message);
            }
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: error.message
        });
    }
}
</script>

