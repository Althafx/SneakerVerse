<%- include("../../views/admin/adminPartials/sidebar") %>
<%- include('../admin/adminPartials/cursor') %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />
  <style>
    
     
     
    
    .content-main {
      margin-left: 250px;
      padding: 20px;
      background-color: #f8f9fa;
      min-height: 100vh;
      background-image: url(/img/sneakers/categoryadmin.jpg);
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
    }

    .content-header {
      margin-bottom: 20px;
      text-align: center;
    }

    .content-title {
      font-size: 24px;
      font-weight: bold;
      color: #ffffff;
    }
    a{
      text-decoration: none;
      color: white;
    }

    .card {
      background-color:rgba(184, 81, 81, 0.7);
      border-radius: 10px;
      box-shadow:0 8px 32px 0 rgba(223, 58, 58, 0.8);
      backdrop-filter: blur(5px);
    }

    .card-header {
      background-color: rgba(59, 57, 57, 0.7);
      color: white;
      border-radius: 10px 10px 0 0;
      padding: 10px;
    }

    .card-body {
      padding: 20px;
      

    }

    .form-control {
      border-radius: 5px;
      padding: 10px;
      border: 1px solid #ddd;
    }

    .btn-primary {
      background-color: #007bff;
      color: white;
      border-radius: 5px;
      border: none;
      padding: 10px 20px;
      transition: background-color 0.3s;
    }

    .btn-primary:hover {
      background-color: #0056b3;
    }

    .table {
      width: 100%;
      margin-top: 20px;
      
      
    }

    .table th {
      background-color: #343a40;
      color: white;
      text-align: center;
      padding: 10px;
      
    }

    .table td {
      text-align: center;
      padding: 10px;
    }

    .pagination-container {
      margin-top: 20px;
      text-align: center;
    }

    .pagination a {
      margin: 0 5px;
      padding: 5px 10px;
      border: 1px solid #ddd;
      text-decoration: none;
      color: #007bff;
      border-radius: 5px;
    }

    .pagination a:hover {
      background-color: #007bff;
      color: white;
    }

    .pagination .current-page {
      margin: 0 5px;
      padding: 5px 10px;
      background-color: #343a40;
      color: white;
      border-radius: 5px;
    }

    @media (max-width: 768px) {
      .content-main {
        margin-left: 0;
        padding: 10px;
      }

      .card-header {
        text-align: center;
      }

      .table-responsive {
        overflow-x: auto;
      }
    }
  </style>
</head>



<body>
  <section class="content-main">
    <div class="content-header">
      <h2 class="content-title">Category</h2>
    </div>

    <header class="card-header text-center mb-3">
      <form action="/admin/category/" method="get" class="d-inline">
        <div class="input-group input-group-sm " style="width: 100%; max-width: 500px; margin: auto;">
          <input type="text" class="form-control border-0 rounded-pill" placeholder="Search categories" name="search" />
          <button class="btn btn-outline-light" type="submit">Search</button>
        </div>
      </form>
    </header>

    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-4">
            <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required />
                <div id="name-error" class="error-message"></div>
              </div>

              <div class="mb-4">
                <label for="descriptionId" class="form-label">Description</label>
                <textarea name="description" placeholder="Type here" class="form-control" id="descriptionId" required></textarea>
                <div id="description-error" class="error-message"></div>
              </div>

              <div class="d-grid">
                <button class="btn btn-danger" type="submit">Create category</button>
              </div>
            </form>
          </div>

          <div class="col-md-8">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th>#</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category, index) => { %>
                    <tr>
                      <td><%= index + 1 %></td>
                      <td><%= category.name %></td>
                      <td><%= category.description %></td>
                      <td>--</td>
                      <td>
                        <button class="btn btn-info btn-sm">Add Offer</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteCategory('<%= category._id %>')">Remove</button>
                      </td>
                      <td>
                        <% if (category.isListed) { %>
                          <span class="badge bg-success">Listed</span>
                        <% } else { %>
                          <span class="badge bg-danger">Unlisted</span>
                        <% } %>
                      </td>
                      <td>
                        <% if (category.isListed) { %>
                          <button class="btn btn-danger btn-sm" onclick="toggleCategoryStatus('<%= category._id %>', false)">Unlist</button>
                        <% } else { %>
                          <button class="btn btn-success btn-sm" onclick="toggleCategoryStatus('<%= category._id %>', true)">List</button>
                        <% } %>
                        <button class="btn btn-primary btn-sm" onclick="openEditModal('<%= category._id %>', '<%= category.name %>', '<%= category.description %>')">Edit</button>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="pagination-container">
      <% if (currentPage > 1) { %>
        <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
      <% } %>

      <% for (let i = 1; i <= totalPages; i++) { %>
        <% if (i === currentPage) { %>
          <span class="current-page"><%= i %></span>
        <% } else { %>
          <a href="?page=<%= i %>"><%= i %></a>
        <% } %>
      <% } %>

      <% if (currentPage < totalPages) { %>
        <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
      <% } %>
    </div>
  </section>

  <!-- Edit Category Modal -->
  <div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="editCategoryForm">
            <input type="hidden" id="editCategoryId">
            <div class="mb-3">
              <label for="editCategoryName" class="form-label">Category Name</label>
              <input type="text" class="form-control" id="editCategoryName" required>
              <div id="editNameError" class="error-message"></div>
            </div>
            <div class="mb-3">
              <label for="editCategoryDescription" class="form-label">Description</label>
              <textarea class="form-control" id="editCategoryDescription" required></textarea>
              <div id="editDescriptionError" class="error-message"></div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" onclick="saveCategory()">Save changes</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    let editModal;

    document.addEventListener('DOMContentLoaded', function() {
      editModal = new bootstrap.Modal(document.getElementById('editCategoryModal'));
    });

    function openEditModal(id, name, description) {
      document.getElementById('editCategoryId').value = id;
      document.getElementById('editCategoryName').value = name;
      document.getElementById('editCategoryDescription').value = description;
      editModal.show();
    }

    function saveCategory() {
      const id = document.getElementById('editCategoryId').value;
      const categoryName = document.getElementById('editCategoryName').value;
      const description = document.getElementById('editCategoryDescription').value;

      if (!validateEditForm()) return;

      $.ajax({
        url: `/admin/editCategory/${id}`,
        method: 'PUT',
        contentType: 'application/json',
        data: JSON.stringify({ categoryName, description }),
        success: function(response) {
          editModal.hide();
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'Category updated successfully',
            timer: 2000,
            showConfirmButton: false
          }).then(() => {
            location.reload();
          });
        },
        error: function(xhr) {
          const errorMessage = xhr.responseJSON?.error || 'Failed to update category';
          showEditError('editNameError', errorMessage);
        }
      });
    }

    function validateEditForm() {
      let isValid = true;
      const name = document.getElementById('editCategoryName').value.trim();
      const description = document.getElementById('editCategoryDescription').value.trim();

      // Clear previous errors
      document.getElementById('editNameError').style.display = 'none';
      document.getElementById('editDescriptionError').style.display = 'none';

      if (!name) {
        showEditError('editNameError', 'Category name is required');
        isValid = false;
      } else if (name.length < 3) {
        showEditError('editNameError', 'Category name must be at least 3 characters');
        isValid = false;
      }

      if (!description) {
        showEditError('editDescriptionError', 'Description is required');
        isValid = false;
      } else if (description.length < 10) {
        showEditError('editDescriptionError', 'Description must be at least 10 characters');
        isValid = false;
      }

      return isValid;
    }

    function showEditError(elementId, message) {
      const element = document.getElementById(elementId);
      element.textContent = message;
      element.style.display = 'block';
      element.style.color = 'red';
      element.style.fontSize = '0.8rem';
      element.style.marginTop = '0.25rem';
    }

    function handleFormSubmit(event) {
      event.preventDefault();
      if (!validateForm()) return;

      const formData = {
        name: document.getElementById('product_name').value.trim(),
        description: document.getElementById('descriptionId').value.trim()
      };

      $.ajax({
        url: '/admin/addCategory',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(formData),
        success: function(response) {
          if (response.success) {
            Swal.fire({
              icon: 'success',
              title: 'Success!',
              text: response.message,
              timer: 2000,
              showConfirmButton: false
            }).then(() => {
              // Clear form fields
              document.getElementById('product_name').value = '';
              document.getElementById('descriptionId').value = '';
              // Clear any error messages
              document.getElementById('name-error').style.display = 'none';
              document.getElementById('description-error').style.display = 'none';
              // Reload page to show new category
              window.location.reload();
            });
          } else {
            showError('name-error', response.error);
          }
        },
        error: function(xhr) {
          const errorMessage = xhr.responseJSON?.error || 'Failed to add category';
          showError('name-error', errorMessage);
        }
      });
    }

    function validateForm() {
      let isValid = true;
      const name = document.getElementById('product_name').value.trim();
      const description = document.getElementById('descriptionId').value.trim();

      // Clear previous errors
      document.getElementById('name-error').style.display = 'none';
      document.getElementById('description-error').style.display = 'none';

      if (!name) {
        showError('name-error', 'Category name is required');
        isValid = false;
      } else if (name.length < 3) {
        showError('name-error', 'Category name must be at least 3 characters');
        isValid = false;
      }

      if (!description) {
        showError('description-error', 'Description is required');
        isValid = false;
      } else if (description.length < 10) {
        showError('description-error', 'Description must be at least 10 characters');
        isValid = false;
      }

      return isValid;
    }

    function showError(elementId, message) {
      const element = document.getElementById(elementId);
      element.textContent = message;
      element.style.display = 'block';
      element.style.color = '#dc3545';
      element.style.fontSize = '0.875em';
      element.style.marginTop = '0.25rem';
    }

    function deleteCategory(categoryId) {
      Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
        if (result.isConfirmed) {
          $.ajax({
            url: `/admin/deleteCategory/${categoryId}`,
            method: 'DELETE',
            success: function(response) {
              if (response.success) {
                Swal.fire({
                  icon: 'success',
                  title: 'Deleted!',
                  text: response.message,
                  timer: 2000,
                  showConfirmButton: false
                }).then(() => {
                  location.reload();
                });
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Error!',
                  text: response.message
                });
              }
            },
            error: function(xhr) {
              Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: xhr.responseJSON?.message || 'Failed to delete category'
              });
            }
          });
        }
      });
    }

    function toggleCategoryStatus(categoryId, shouldList) {
      const action = shouldList ? 'list' : 'unlist';
      const endpoint = shouldList ? 'unlistCategory' : 'listCategory';
      
      Swal.fire({
        title: 'Are you sure?',
        text: `Do you want to ${action} this category?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: shouldList ? '#28a745' : '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: `Yes, ${action} it!`
      }).then((result) => {
        if (result.isConfirmed) {
          $.ajax({
            url: `/admin/${endpoint}/${categoryId}`,
            method: 'PATCH',
            contentType: 'application/json',
            success: function(response) {
              if (response.success) {
                Swal.fire({
                  icon: 'success',
                  title: 'Success!',
                  text: response.message,
                  timer: 2000,
                  showConfirmButton: false
                }).then(() => {
                  window.location.reload();
                });
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Error!',
                  text: response.message || 'Failed to update category status'
                });
              }
            },
            error: function(xhr) {
              Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: xhr.responseJSON?.message || `Failed to ${action} category`
              });
            }
          });
        }
      });
    }
  </script>
</body>
